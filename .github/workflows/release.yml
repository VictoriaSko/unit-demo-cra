name: GitHub Actions on Release Tag

on: 
  push:
    tags:
      - 'v[0-9]+'

defaults:
  run:
    working-directory: .

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  create-issue:
    name: Create Issue
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
          writeToFile: false
          useGitmojis: false
      - name: "Create Issue"
        uses: ./.github/workflows/createIssue
        with: 
          owner: ${{ github.repository_owner }}
          actor: ${{ github.actor }}
          repo: ${{ github.event.repository.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.ref }}
          tag_name: ${{ github.ref_name }}
          changelog: ${{ steps.changelog.outputs.changes }}
  lint:
    runs-on: ubuntu-latest
    needs: [create-issue]
    steps:
    - uses: actions/checkout@v3
    - name: Install modules
      run: npm ci
    - name: Run ESLint
      run: npm run lint
  unit-tests:
    runs-on: ubuntu-latest
    needs: [create-issue]
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm test
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [create-issue]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  jobs-result:
    environment:
      name: release
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, e2e-tests]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check results
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
          echo ${{ github.repository_owner }}
          echo ${{ toJson(needs) }}

