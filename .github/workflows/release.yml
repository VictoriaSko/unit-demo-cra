name: GitHub Actions on Release Tag

on:
  push:
    tags:
      - 'v[0-9]+'

defaults:
  run:
    working-directory: .

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  create-issue:
    name: Create Issue
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
          writeToFile: false
          useGitmojis: false
      - name: Create Issue
        uses: ./.github/workflows/createIssue
        with:
          owner: ${{ github.repository_owner }}
          actor: ${{ github.actor }}
          repo: ${{ github.event.repository.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.ref }}
          tag_name: ${{ github.ref_name }}
          changelog: ${{ steps.changelog.outputs.changes }}
  lint:
    name: Run Lint Project Check
    runs-on: ubuntu-latest
    needs: [create-issue]
    steps:
      - uses: actions/checkout@v3
      - name: Install modules
        run: npm ci
      - name: Run ESLint
        run: npm run lint
  unit-tests:
    name: Run Jest Tests
    runs-on: ubuntu-latest
    needs: [create-issue]
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm test
  e2e-tests:
    name: Run Playwrignt Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [create-issue]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  tests-result:
    name: Add Tests Results To Issues
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, e2e-tests]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Update Issue
        uses: ./.github/workflows/updateIssue
        with:
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.ref }}
          tag_name: ${{ github.ref_name }}
          tests_result: ${{ toJson(needs) }}
          tests_result_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  build:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: release
    needs: [tests-result]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - run: npm ci
      - run: npm run build
      - run: |
          chmod -c -R +rX "./build/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - uses: actions/upload-pages-artifact@v2
        with:
          path: './build/'
          retention-days: '90'
  deploy:
    needs: [build]
    permissions: write-all
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
  deploy-result:
    name: Add Deploy Result To Issues
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Update Issue
        uses: ./.github/workflows/updateIssue
        with:
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.ref }}
          tag_name: ${{ github.ref_name }}
          deploy_result: ${{ toJson(needs) }}
          deploy_result_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
